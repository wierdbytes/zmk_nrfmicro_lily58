#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/outputs.h>

#define BASE 0
#define LOWER 1
#define RAISE 2

/ {
	behaviors {
		td_raise: tap_raise {
			compatible = "zmk,behavior-tap-dance";
			label = "TAP_RAISE";
			#binding-cells = <0>;
			tapping-term-ms = <1000>;
			bindings = <&mo RAISE>, <&tog RAISE>;
		};
		td_lower: tap_lower {
			compatible = "zmk,behavior-tap-dance";
			label = "TAP_LOWER";
			#binding-cells = <0>;
			tapping-term-ms = <1000>;
			bindings = <&mo LOWER>, <&tog LOWER>;
		};
		td_caps: tap_caps {
			compatible = "zmk,behavior-tap-dance";
			label = "TAP_CAPS";
			#binding-cells = <0>;
			tapping-term-ms = <500>;
			bindings = <&kp LSHFT>, <&kp CAPS>;
		};
	};
	combos {
		compatible = "zmk,combos";

		// BT combos
		combo_bt_sel_0 {
			timeout-ms = <50>;
			key-positions = <37 53>; // Lower + 6
			bindings = <&bt BT_SEL 0>;
		};
		combo_bt_sel_1 {
			timeout-ms = <50>;
			key-positions = <38 53>; // Lower + 7
			bindings = <&bt BT_SEL 1>;
		};
		combo_bt_clr {
			timeout-ms = <50>;
			key-positions = <51 53>; // Lower + LGUI
			bindings = <&bt BT_CLR>;
		};

		// Layers toggle 
		combo_base_right {
			timeout-ms = <150>;
			key-positions = <11 54>;
			bindings = <&to BASE>;
		};
		combo_base_left {
			timeout-ms = <150>;
			key-positions = <53 0>;
			bindings = <&to BASE>;
		};

		// CAPS
		combo_caps {
			timeout-ms = <150>;
			key-positions = <24 53>;
			bindings = <&kp CAPS>;
		};
	};

	keymap {
		compatible = "zmk,keymap";

		default_layer {
// +---------------------------------------------------------------------------------------------------------+
// |  ESC  |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7   |  8    |  9   |   0   |   -   |
// |  TAB  |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U   |  I    |  O   |   P   |   [   |
// |  CTRL |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J   |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |   "="  |  |  "]"  |  N   |  M   |  ,    |  .   |   /   | ENTER |
//                     | ALT  | GUI  | SPACE| LOWER  |  | RAISE | BKSP |  `   |  DEL  |
			bindings = <
&kp ESC    &kp N1  &kp N2    &kp N3    &kp N4          &kp N5                      &kp N6      &kp N7    &kp N8     &kp N9   &kp N0         &kp MINUS
&kp TAB    &kp Q   &kp W     &kp E     &kp R           &kp T                       &kp Y       &kp U     &kp I      &kp O    &kp P          &kp LBKT
&kp LSHFT  &kp A   &kp S     &kp D     &kp F           &kp G                       &kp H       &kp J     &kp K      &kp L    &kp SEMICOLON  &kp APOSTROPHE
&kp LCTRL  &kp Z   &kp X     &kp C     &kp V           &kp B  &kp EQUAL  &kp RBKT  &kp N       &kp M     &kp COMMA  &kp DOT  &kp FSLH       &kp ENTER
				   &kp LALT  &kp LGUI  &mt LGUI SPACE  &td_lower                   &td_raise   &kp BSPC  &kp BSLH   &kp DEL
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};

		lower_layer {
// +------------------------------------------------------------------------------------------------------------------------+
// |  F1   |  F2   |  F3   |  F4   |  F5   |  F6   |                    |          |        | NUMLK |   =   |   /   |   *   |
// |  F7   |  F8   |  F9   |  F10  |  F11  |  F12  |                    |          |        |   7   |   8   |   9   |   -   |
// |       |   1   |   2   |   3   |   4   |   5   |                    |          |        |   4   |   5   |   6   |   +   |
// |       |   6   |   7   |   8   |   9   |   0   |  PGUP  |  |  PGDN  |          |    0   |   1   |   2   |   3   |  ‚Æê   |
//                         |       |       |       |        |  |        |          |        |   .   |
			bindings = <
&kp F1  &kp F2     &kp F3     &kp F4     &kp F5     &kp F6                               &trans  &trans     &kp KP_NLCK  &kp KP_EQUAL  &kp KP_DIVIDE  &kp KP_MULTIPLY
&kp F7  &kp F8     &kp F9     &kp F10    &kp F11    &kp F12                              &trans  &trans     &kp KP_N7    &kp KP_N8     &kp KP_N9      &kp KP_MINUS
&trans  &kp KP_N1  &kp KP_N2  &kp KP_N3  &kp KP_N4  &kp KP_N5                            &trans  &trans     &kp KP_N4    &kp KP_N5     &kp KP_N6      &kp KP_PLUS
&trans  &kp KP_N6  &kp KP_N7  &kp KP_N8  &kp KP_N9  &kp K      &kp PG_UP      &kp PG_DN  &trans  &kp KP_N0  &kp KP_N1    &kp KP_N2     &kp KP_N3      &kp KP_ENTER
		           &trans     &trans     &trans     &trans                               &trans  &trans     &trans       &kp KP_DOT
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};

		raise_layer {
// +------------------------------------------------------------------------------------------------------------+
// |       |     |     |     |     |     |                   |  VOL_UP  |  PLAY | PgUp  |       |       |       |
// |       |     |     |     |     |     |                   |  VOL_DN  |  NEXT |   ^   |       |       |       |
// |       |     |     |     |     |     |                   |   Home   |   <-  |   v   |  ->   |  End  |       |
// |       |     |     |     |     |     |        |  |       |          |       | PgDn  |       |       |       |
//                     |     |     |     |        |  |       |          |       |       |
			bindings = <
&trans  &trans  &trans  &trans  &trans  &trans                        &kp K_VOL_UP  &kp C_PP    &kp PG_UP   &trans     &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                        &kp K_VOL_DN  &kp C_NEXT  &kp UP      &trans     &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans                        &kp HOME      &kp LEFT    &kp DOWN    &kp RIGHT  &kp END  &trans
&trans  &trans  &trans  &trans  &trans  &trans  &trans        &trans  &trans        &kp END     &kp PG_DN   &trans     &trans   &trans
				&trans  &trans  &trans  &trans                        &trans        &trans      &trans      &trans
			>;

			sensor-bindings = <&inc_dec_kp C_VOL_UP C_VOL_DN>;
		};
	};
};
